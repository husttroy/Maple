conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/Study/FileStudy.java ** FileStudy ** saveState] = getBytes::entryIt.hasNext;;;get::entryIt.hasNext;;;createNewFile::!saveFile.exists;;;next::entryIt.hasNext;;;write::entryIt.hasNext;;;new String::entryIt.hasNext
conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!save.exists
conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!save.exists
conds[https://github.com/Ourobor/petulant-batman ** src/Study/FileStudy.java ** FileStudy ** saveState] = getBytes::entryIt.hasNext;;;get::entryIt.hasNext;;;createNewFile::!saveFile.exists;;;next::entryIt.hasNext;;;write::entryIt.hasNext;;;new String::entryIt.hasNext
conds[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!save.exists
conds[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!save.exists
conds[https://github.com/dana-i2cat/opennaas-routing-nfv ** bundles/net.i2cat.mantychore.actionsets.junos/src/main/java/net/i2cat/mantychore/actionsets/junos/actions/TempFileManager.java ** TempFileManager ** createFile] = createNewFile::!noExists;;;delete::!noExists
conds[https://github.com/dana-i2cat/opennaas-routing-nfv ** extensions/bundles/router.actionsets.junos/src/main/java/org/opennaas/extensions/router/junos/actionssets/actions/TempFileManager.java ** TempFileManager ** createFile] = createNewFile::!noExists;;;delete::!noExists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/builders/WsdlWithPublicServiceGenerator.java ** WsdlWithPublicServiceGenerator ** writeNewwsdl] = log::created
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/external/wsdl/parser/WSDLConversionToSingleNamespace.java ** WSDLConversionToSingleNamespace ** writeNewwsdl] = log::created
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/errorlibrary/FileErrorIdGenerator.java ** FileErrorIdGenerator ** tryGetFileLock] = getMessage::!(lockFile.exists);;;new ErrorIdGeneratorException::lockFile.exists***!(lockFile.exists) && !lockFile.createNewFile***!(lockFile.exists)***!copyFile***!file.delete***!tempFile.renameTo***fileLock == null;;;log::lockFile.exists***!(lockFile.exists) && !lockFile.createNewFile***!(lockFile.exists)***!copyFile***!file.delete***!tempFile.renameTo
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/library/utils/TypeLibraryUtilities.java ** TypeLibraryUtilities ** create] = createNewFile::!(isPath);;;mkdirs::isPath***!(isPath);;;getPath::!(isPath);;;new File::!(isPath)
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createInterfacePropsFile] = createNewFile::!file.exists;;;mkdir::!destDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createPropertyFile] = createNewFile::!intfProps.exists;;;mkdirs::!testDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQE2Test.java ** BetterToolingQE2Test ** createConsumerPropsFile] = createNewFile::!file.exists;;;mkdirs::!dir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQETest.java ** BetterToolingQETest ** createConsumerPropsFile] = mkdirs::!dDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQE2Test.java ** ConsumerIDQE2Test ** CreateInterfacePropsFile] = createNewFile::!file.exists;;;mkdir::!dDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQETest.java ** ConsumerIDQETest ** createConsumerPropsFile] = createNewFile::!file.exists;;;mkdir::!destDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderTest.java ** ObjectFactorySortOrderTest ** initialize] = createNewFile::!objFactFolder.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderV3Test.java ** ObjectFactorySortOrderV3Test ** initialize] = createNewFile::!objFactFolder.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceGeneratorTest8.java ** ServiceGeneratorTest8 ** updateServiceImplProjectProperties] = remove::remove;;;createNewFile::!File;;;mkdir::!destDir.exists;;;setProperty::!(remove);;;new File::!File
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** CreateInterfacePropsFile] = createNewFile::!file.exists;;;mkdir::!destDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** createImplPropsFile] = new FileInputStream::!file.exists;;;new Properties::!file.exists;;;store::!file.exists;;;createNewFile::!file.exists;;;getAbsolutePath::!file.exists;;;load::!file.exists;;;mkdir::!destDir.exists;;;setProperty::!file.exists;;;close::!file.exists***!file.exists;;;new FileOutputStream::!file.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE3Test.java ** ServiceUIDQE3Test ** CreateConsumerPropsFile] = createNewFile::!file.exists;;;mkdir::!dDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateConsumerPropsFile] = createNewFile::!file.exists;;;mkdirs::!dest.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateInterfacePropsFile] = createNewFile::!file.exists;;;mkdirs::!destDir.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/errorlibrary/ErrorLibraryFileGenerationTest.java ** ErrorLibraryFileGenerationTest ** createDomainPropertiesFile] = assertTrue::!testProp.exists;;;createNewFile::!testProp.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/BugTest.java ** BugTest ** testBug] = assertTrue::javaTypeLibDir.isDirectory;;;listFiles::javaTypeLibDir.isDirectory***javaTypeLibDir.isDirectory***javaTypeLibDir.isDirectory;;;createNewFile::!type.exists***!type.exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder1] = createNewFile::!toXsdFile.exists***!fromXsdFile.exists;;;write::lenin.read > 0
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder] = createNewFile::!toXsdFile.exists***!fromXsdFile.exists;;;write::lenin.read > 0
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/core/internal/project/facet/JSFUtils.java ** JSFUtils ** createConfigFile] = log::os != null;;;close::os != null
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/designtime/internal/view/model/jsp/persistence/TagRepository.java ** TagRepository ** getOrCreateMasterIndex] = new SerializableVersion::!masterIndexFile.exists***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE);;;new IOException::!masterIndexFile.exists && !masterIndexFile.createNewFile;;;createNewRepo::!repoDir.exists;;;load::!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE);;;toString::GLOBAL_MASTER_INDEX != null && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!masterIndexFile.exists && !masterIndexFile.createNewFile***!masterIndexFile.exists && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE) && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE;;;create::!masterIndexFile.exists;;;log::GLOBAL_MASTER_INDEX != null && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!masterIndexFile.exists && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE) && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.pagedesigner/src/org/eclipse/jst/pagedesigner/utils/PreviewUtil.java ** PreviewUtil ** toFile] = getEncoding::charset == null || !Charset.isSupported;;;createNewFile::!file.exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/pad/fragment/ChatRoomFragment.java ** ChatRoomFragment ** initValues] = getManagerServiceName::application.getNotificationService != null;;;createConversation::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getAssocActivity::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500 && .equals***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && !(.equals)***userModel != null***chatGroupModel != null;;;show::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500 && .equals***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && !(.equals);;;new StringBuilder::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;setText::.equals && !(module != null) && models != null && models.size > 0 && chatModel.getMycreate***.equals && !(module != null) && models != null && models.size > 0 && !(chatModel.getMycreate)***!(chatModel.getMycreate) && userModel != null && userModel.isFavor***!(chatModel.getMycreate) && userModel != null && !(userModel.isFavor)***chatGroupModel != null***userModel != null;;;sendMessage::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;new Thread::event.getAction == MotionEvent.ACTION_DOWN;;;getUserModel::!(chatModel.getMycreate);;;currentTimeMillis::event.getAction == MotionEvent.ACTION_DOWN;;;reset::event.getAction == MotionEvent.ACTION_UP && mr != null;;;new AsyncTask<Void, Void, Void>::chatGroupModel != null && !roomIsNoExit;;;instance::.equals***.equals && !(module != null)***!(chatModel.getMycreate);;;getConversations::.equals && chatGroupModel != null***!(chatModel.getMycreate) && userModel != null;;;setNeedProgressDialog::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getGroupName::chatGroupModel != null***event.getAction == MotionEvent.ACTION_DOWN && chatGroupModel != null;;;append::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;new HttpRequestAsynTask::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;execute::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***chatGroupModel != null && !roomIsNoExit;;;getJid::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500 && userModel != null;;;get::.equals && !(module != null) && models != null && models.size > 0;;;setShowProgressDialog::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;mkdirs::!dir.exists;;;notifyDataSetChanged::chatGroupModel != null && !roomIsNoExit;;;makeText::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500 && .equals***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && !(.equals);;;getInstance::.equals && chatGroupModel != null***!(chatModel.getMycreate) && userModel != null;;;sleep::event.getAction == MotionEvent.ACTION_UP;;;getChatManager::application.getNotificationService != null;;;start::event.getAction == MotionEvent.ACTION_DOWN;;;createNewFile::!mFileTemp.exists;;;getSessionContainer::.equals && !(module != null);;;getSessionKey::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;toString::.equals && !(module != null)***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getStuff::.equals***.equals && !(module != null);;;getChatRoomContainer::.equals;;;getString::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getUnreadMessageCount::.equals && chatGroupModel != null && module != null***!(chatModel.getMycreate) && userModel != null && module != null;;;release::event.getAction == MotionEvent.ACTION_UP && mr != null;;;printStackTrace::event.getAction == MotionEvent.ACTION_UP***event.getAction == MotionEvent.ACTION_UP && mr != null***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***!mFileTemp.exists;;;getUserName::application.getNotificationService != null;;;getStringExtra::.equals***!(chatModel.getMycreate);;;stop::event.getAction == MotionEvent.ACTION_UP && mr != null;;;setGroupCode::.equals && !(module != null);;;getCubeModuleByIdentifier::.equals && chatGroupModel != null***!(chatModel.getMycreate) && userModel != null;;;set::event.getAction == MotionEvent.ACTION_DOWN***event.getAction == MotionEvent.ACTION_UP;;;setSelection::chatGroupModel != null && !roomIsNoExit;;;new ChatGroupModel::.equals && !(module != null);;;sendEmptyMessage::event.getAction == MotionEvent.ACTION_DOWN***event.getAction == MotionEvent.ACTION_UP;;;getRoomJid::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500 && chatGroupModel != null;;;delete::event.getAction == MotionEvent.ACTION_UP && !(.equals) && myRecAudioFile.exists;;;getPath::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500***event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getAppKey::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;saveChatJid::.equals***!(chatModel.getMycreate);;;new JSONObject::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getNotificationService::application.getNotificationService != null;;;longimplement::event.getAction == MotionEvent.ACTION_DOWN && userModel != null***event.getAction == MotionEvent.ACTION_DOWN && chatGroupModel != null;;;i::.equals && !(module != null);;;queryForEq::.equals && !(module != null);;;setRoomJid::.equals && !(module != null);;;setPicId::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;findLastHistory::.equals && !(module != null);;;getName::userModel != null***event.getAction == MotionEvent.ACTION_DOWN && userModel != null;;;setVisibility::.equals && chatGroupModel != null***.equals && !(module != null)***.equals && !(module != null)***.equals && !(module != null)***!(chatModel.getMycreate)***!(chatModel.getMycreate)***application.getNotificationService != null && !application.getChatManager->application.getNotificationService->isOnline && !roomIsNoExit***application.getNotificationService != null && !application.getChatManager->application.getNotificationService->isOnline && !roomIsNoExit***application.getNotificationService != null && !application.getChatManager->application.getNotificationService->isOnline && !roomIsNoExit***notificationService != null && application.getChatManager->notificationService.isOnline && !roomIsNoExit***notificationService != null && application.getChatManager->notificationService.isOnline && !roomIsNoExit***notificationService != null && application.getChatManager->notificationService.isOnline && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit;;;new File::event.getAction == MotionEvent.ACTION_UP && System.currentTimeMillis - start > 1500;;;getRoomName::.equals && !(module != null);;;decreaseMsgCountBy::.equals && chatGroupModel != null && module != null***!(chatModel.getMycreate) && userModel != null && module != null;;;findHistory::chatGroupModel != null && !roomIsNoExit;;;clearNewMessageCount::.equals && chatGroupModel != null***!(chatModel.getMycreate) && userModel != null;;;getCount::chatGroupModel != null && !roomIsNoExit;;;new ChatRoomAdapter::userModel != null***chatGroupModel != null;;;setGroupName::.equals && !(module != null)
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/camera/CameraActivity.java ** CameraActivity ** save] = e::Environment.getExternalStorageState->equals;;;createNewFile::Environment.getExternalStorageState->equals && !file.exists;;;new StatFs::Environment.getExternalStorageState->equals;;;getExternalStorageDirectory::Environment.getExternalStorageState->equals;;;write::Environment.getExternalStorageState->equals;;;toString::Environment.getExternalStorageState->equals;;;new File::Environment.getExternalStorageState->equals;;;getBlockSize::Environment.getExternalStorageState->equals;;;getAvailableBlocks::Environment.getExternalStorageState->equals;;;close::Environment.getExternalStorageState->equals;;;new FileOutputStream::Environment.getExternalStorageState->equals
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onClick] = setImageBitmap::result != null***result != null;;;putExtra::result != null;;;mkdirs::!dir.exists;;;gc::result != null;;;show::!canSend;;;makeText::!canSend;;;copyFile::params0 != null && params1 != null && file0.exists && file1.exists;;;finish::result != null;;;getIntent::result != null;;;setResult::result != null;;;createNewFile::!imageFile.exists;;;new File::params0 != null && params1 != null***params0 != null && params1 != null;;;printStackTrace::!imageFile.exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onCreate] = new AsyncTask<Void, Void, Bitmap>::!(result != null) && imagePath != null;;;setImageBitmap::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getStringExtra::showTitle;;;execute::flag && imagePath != null***!(result != null) && imagePath != null;;;e::flag && imagePath != null***!(result != null) && imagePath != null;;;readPictureDegree::!(result != null) && imagePath != null && result != null;;;setImageResource::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;getExternalStorageDirectory::flag && imagePath != null;;;mkdirs::flag && imagePath != null && !dir.exists;;;setImageMatrix::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;makeText::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;show::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;setText::showTitle;;;new AsyncTask<String, Void, Bitmap>::flag && imagePath != null;;;rotateImage::!(result != null) && imagePath != null && result != null;;;center::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getIntent::showTitle;;;createNewFile::flag && imagePath != null && !fileTemp.exists;;;minZoom::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getimage::flag && imagePath != null***!(result != null) && imagePath != null;;;setVisibility::!(result != null)***!(result != null);;;new File::flag && imagePath != null***flag && imagePath != null;;;printStackTrace::flag && imagePath != null && !fileTemp.exists***flag && imagePath != null***!(result != null) && imagePath != null
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/image/CropImage.java ** CropImage ** saveOutput] = compress::saveUrl != null && outputStream != null;;;getIntent::saveUrl != null;;;finish::saveUrl != null;;;putExtra::saveUrl != null***saveUrl != null;;;e::saveUrl != null***!(outputStream != null);;;setResult::saveUrl != null***saveUrl != null;;;createNewFile::!fileCrop.exists;;;openOutputStream::saveUrl != null;;;mkdirs::!dir.exists;;;closeSilently::saveUrl != null;;;getOrientationInDegree::saveUrl != null;;;printStackTrace::!fileCrop.exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/update/DownloadUpdateActivity.java ** DownloadTask ** doInBackground] = d::response.getStatusLine->getStatusCode == HttpStatus.SC_OK***response.getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getEntity::response.getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getContent::response.getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getContentLength::response.getStatusLine->getStatusCode == HttpStatus.SC_OK;;;publishProgress::response.getStatusLine->getStatusCode == HttpStatus.SC_OK && countis.read != 1;;;new RuntimeException::response.getStatusLine->getStatusCode == HttpStatus.SC_OK && total != length***!(total != length);;;close::fos != null***is != null;;;new FileOutputStream::response.getStatusLine->getStatusCode == HttpStatus.SC_OK;;;flush::fos != null;;;createNewFile::response.getStatusLine->getStatusCode == HttpStatus.SC_OK && !apkFile.exists;;;getStatusLine::!(total != length);;;write::response.getStatusLine->getStatusCode == HttpStatus.SC_OK && countis.read != 1;;;getStatusCode::!(total != length)
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/LogUtil.java ** LogUtil ** storeLog] = e::!fileDir.exists && !fileDir.mkdir***!file.exists && !file.createNewFile;;;printStackTrace::!file.exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/imageTool/CubeAsyncImage.java ** CubeAsyncImage ** doBufferImage] = e::!isSdCardExist || fileNamegetImageFileName == null;;;getParentFile::!f.getParentFile->exists;;;mkdirs::!f.getParentFile->exists;;;delete::f.exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/org/apache/cordova/file/FileUtils.java ** FileUtils ** getFile] = new TypeMismatchException::!(!fp.exists) && directory && fp.isFile***!(!fp.exists) && !(fp.isFile) && fp.isDirectory;;;optBoolean::options != null***options != null && create;;;new FileExistsException::create && exclusive && fp.exists***create && !fp.exists;;;createNewFile::create && !(directory);;;mkdir::create && directory;;;new FileNotFoundException::!(!fp.exists) && !fp.exists;;;new EncodingException::fileName.contains
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = flush::!(f.exists);;;createNewFile::!(f.exists);;;mkdirs::!(f.exists) && !parentFile.exists;;;getParentFile::!(f.exists);;;write::!(f.exists);;;close::!(f.exists);;;new FileOutputStream::!(f.exists)
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = compress::!(f.exists);;;createNewFile::!(f.exists);;;mkdirs::!(f.exists) && !parentFile.exists;;;getParentFile::!(f.exists);;;delete::!(f.exists)***!(f.exists);;;printStackTrace::!(f.exists)***!(f.exists);;;close::!(f.exists);;;new FileOutputStream::!(f.exists)
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!file.exists;;;createNewFile::!file.exists;;;mkdirs::!file.exists && !parentFile.exists;;;getParentFile::!file.exists;;;write::!file.exists;;;printStackTrace::!file.exists***!file.exists;;;close::!file.exists;;;new FileOutputStream::!file.exists
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = flush::!(f.exists);;;createNewFile::!(f.exists);;;mkdirs::!(f.exists) && !parentFile.exists;;;getParentFile::!(f.exists);;;write::!(f.exists);;;close::!(f.exists);;;new FileOutputStream::!(f.exists)
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = compress::!(f.exists);;;createNewFile::!(f.exists);;;mkdirs::!(f.exists) && !parentFile.exists;;;getParentFile::!(f.exists);;;delete::!(f.exists)***!(f.exists);;;printStackTrace::!(f.exists)***!(f.exists);;;close::!(f.exists);;;new FileOutputStream::!(f.exists)
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!file.exists;;;createNewFile::!file.exists;;;mkdirs::!file.exists && !parentFile.exists;;;getParentFile::!file.exists;;;write::!file.exists;;;printStackTrace::!file.exists***!file.exists;;;close::!file.exists;;;new FileOutputStream::!file.exists
conds[https://github.com/hyxf/coder ** source/src/cn/hyxf/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!file.exists;;;createNewFile::!file.exists;;;mkdirs::!file.exists && !parentFile.exists;;;getParentFile::!file.exists;;;write::!file.exists;;;printStackTrace::!file.exists***!file.exists;;;close::!file.exists;;;new FileOutputStream::!file.exists
conds[https://github.com/raymondBourges/esup-commons-import ** esup-commons/esup-commons-core/src/main/java/org/esupportail/commons/utils/lock/FileLockImpl.java ** FileLockImpl ** lock] = new AlreadyLockedException::!file.createNewFile
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/io/flv/impl/FLVWriter.java ** FLVWriter ** <init>] = warn::append && !file.exists!file.canRead!file.canWrite;;;new RandomAccessFile::append***!(duration == 0)***!(duration == 0);;;lastModified::append && !(!file.exists!file.canRead!file.canWrite);;;createNewFile::!(duration == 0) && dat.exists;;;trace::append && !(!file.exists!file.canRead!file.canWrite);;;delete::!(duration == 0) && dat.exists;;;length::append && !(!file.exists!file.canRead!file.canWrite)***append && !(!file.exists!file.canRead!file.canWrite);;;new File::!(duration == 0);;;debug::append;;;getDuration::append;;;seek::append && duration == 0
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/net/proxy/DebugProxyHandler.java ** DebugProxyHandler ** sessionCreated] = new ProtocolCodecFilter::log.isDebugEnabled;;;put::true;;;connect::!isClient;;;new NioSocketConnector::!isClient;;;debug::log.isDebugEnabled***!isClient***!isClient && future.isConnected && log.isDebugEnabled;;;getFilterChain::log.isDebugEnabled***true;;;getPort::true;;;write::true;;;currentTimeMillis::true;;;getResource::true***true;;;getSession::!isClient && future.isConnected;;;new NetworkDumpFilter::true;;;flip::true;;;getFile::true***true;;;getChannel::true***true;;;allocate::true;;;setAttribute::log.isDebugEnabled***!isClient && future.isConnected***!isClient && future.isConnected;;;setHandler::!isClient;;;new FileOutputStream::true***true;;;new RTMP::log.isDebugEnabled;;;addFirst::log.isDebugEnabled***true;;;getHostName::true;;;createNewFile::true***true;;;awaitUninterruptibly::!isClient;;;buf::true
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ClientBroadcastStream.java ** ClientBroadcastStream ** saveAs] = warn::meta.exists && !(meta.delete);;;getCanonicalPath::!(meta.delete);;;put::recordPipe == null***isAppend***!(isAppend);;;setFile::scope.getContext->hasBean;;;getAudioCodec::codecInfo;;;new AudioData::codecInfo && audioCodec != null && config != null;;;asReadOnlyBuffer::codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;new FileConsumer::!(scope.getContext->hasBean);;;getBean::scope.getContext->hasBean;;;setScope::scope.getContext->hasBean;;;debug::meta.exists && meta.delete***!(meta.delete)***scope.getContext->hasBean***!(scope.getContext->hasBean)***codecInfo***codecInfo && videoCodec != null && config != null***codecInfo && videoCodec != null && config != null***codecInfo && !(config != null)***codecInfo***codecInfo && audioCodec != null && config != null***codecInfo && audioCodec != null && config != null***codecInfo && !(config != null);;;getContext::!(generator.resolvesToAbsolutePath)***scope.getContext->hasBean;;;clear::recordPipe == null;;;deleteOnExit::meta.exists && !(meta.delete);;;subscribe::recordPipe == null;;;substring::!file.exists && slashPos != 1;;;getResource::!(generator.resolvesToAbsolutePath);;;getFile::!(generator.resolvesToAbsolutePath);;;getVideoCodec::codecInfo;;;trace::meta.exists;;;mkdirs::!file.exists && !tmp.isDirectory;;;lastIndexOf::!file.exists;;;format::!isAppend && file.exists && !file.delete;;;new VideoData::codecInfo && videoCodec != null && config != null;;;getDecoderConfiguration::codecInfo && videoCodec != null***codecInfo && audioCodec != null;;;new IOException::conn == null***!isAppend && file.exists && !file.delete;;;setVideoDecoderConfiguration::codecInfo && videoCodec != null && config != null;;;createNewFile::!file.exists;;;getName::!isAppend && file.exists && !file.delete***meta.exists && meta.delete***meta.exists && !(meta.delete)***codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;getAbsolutePath::!file.exists;;;new File::generator.resolvesToAbsolutePath***!file.exists;;;setAudioDecoderConfiguration::codecInfo && audioCodec != null && config != null;;;release::codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;new InMemoryPushPushPipe::recordPipe == null
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ServerStream.java ** ServerStream ** saveAs] = getFile::!(generator.resolvesToAbsolutePath);;;warn::!file.exists && !file.canWrite***!(!file.canWrite) && !(meta.delete);;;getCanonicalPath::!file.exists && !file.canWrite;;;put::isAppend***!(isAppend);;;setFile::scope.getContext->hasBean;;;mkdirs::!file.exists && !tmp.isDirectory;;;new FileConsumer::!(scope.getContext->hasBean);;;setScope::scope.getContext->hasBean;;;getBean::scope.getContext->hasBean;;;lastIndexOf::!file.exists;;;debug::!(!file.canWrite) && meta.delete;;;getContext::!(generator.resolvesToAbsolutePath)***scope.getContext->hasBean;;;deleteOnExit::!(!file.canWrite) && !(meta.delete);;;new IOException::!isAppend && file.exists && !file.delete;;;createNewFile::!file.exists;;;getName::!(!file.canWrite) && meta.delete***!(!file.canWrite) && !(meta.delete);;;substring::!file.exists && slashPos != 1;;;getAbsolutePath::!file.exists***!(!file.canWrite);;;getResource::!(generator.resolvesToAbsolutePath);;;new File::generator.resolvesToAbsolutePath***!file.exists***!(!file.canWrite);;;new InMemoryPushPushPipe::null == recordPipe
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/consumer/FileConsumer.java ** FileConsumer ** init] = new IllegalStateException::!(audioConfigurationTag != null) && !(mode.equals);;;getAppendWriter::!(audioConfigurationTag != null) && mode.equals;;;new ArrayList<QueuedData>::delayWrite;;;readLock::delayWrite;;;new IOException::!folder.exists && !folder.mkdirs***!(!file.isFile) && !file.canWrite;;;new ReentrantReadWriteLock::delayWrite;;;createNewFile::!file.isFile;;;getWriter::mode == null || mode.equals;;;writeTag::mode == null || mode.equals && videoConfigurationTag != null***mode == null || mode.equals && audioConfigurationTag != null;;;writeLock::delayWrite
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = println::!(f.exists);;;getAbsolutePath::!(f.exists);;;delete::f.exists***!(f.exists) && f.exists;;;new File::!(f.exists)
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = println::!(f.exists);;;getAbsolutePath::!(f.exists);;;delete::f.exists***!(f.exists) && f.exists;;;new File::!(f.exists)
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = delete::f.exists
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = delete::f.exists
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/stream/NoSyncServerStream.java ** NoSyncServerStream ** saveAs] = warn::!res.exists && !res.getFile->canWrite;;;getFile::!res.exists***!res.exists && !res.getFile->canWrite***!res.exists;;;getCanonicalPath::!res.exists && !res.getFile->canWrite;;;put::isAppend***!(isAppend);;;error::!res.exists;;;new IOException::!isAppend && res.exists && !res.getFile->delete;;;createNewFile::!res.exists;;;mkdirs::!res.exists && !tmp.isDirectory;;;substring::!res.exists && slashPos != 1;;;getAbsolutePath::!res.exists;;;getResource::!res.exists;;;lastIndexOf::!res.exists;;;new File::!res.exists;;;new InMemoryPushPushPipe::null == recordPipe
conds[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** findFileForConfig] = findFileForConfig::f.exists;;;createNewFile::!(f.exists);;;name::f.exists;;;next::iterator.hasNext;;;debug::f.exists***!(f.exists);;;printStackTrace::!(f.exists)
conds[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** write] = createNewFile::!file.exists;;;name::!file.exists;;;write::config.values***config.values;;;getAbsolutePath::!file.exists;;;label::config.values;;;debug::!file.exists;;;as_string::config.values;;;close::out != null
conds[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/FinalDb.java ** FinalDb ** createDbFileOnSDCard] = new DbException::!dbf.exists;;;openOrCreateDatabase::!dbf.exists && dbf.createNewFile***!(dbf.createNewFile)
conds[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/http/entityhandler/FileEntityHandler.java ** FileEntityHandler ** handleEntity] = new IOException::mStop && current < count;;;createNewFile::!targetFile.exists;;;write::!mStop!current >= countreadLeninput.read > 0;;;length::isResume;;;callBack::!mStop!current >= countreadLeninput.read > 0;;;new FileOutputStream::isResume***!(isResume)