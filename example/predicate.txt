conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/Study/FileStudy.java ** FileStudy ** saveState] = getBytes::hasNext;;;get::hasNext;;;createNewFile::!exists;;;next::hasNext;;;write::hasNext;;;new String::hasNext
conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!exists
conds[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!exists
conds[https://github.com/Ourobor/petulant-batman ** src/Study/FileStudy.java ** FileStudy ** saveState] = getBytes::hasNext;;;get::hasNext;;;createNewFile::!exists;;;next::hasNext;;;write::hasNext;;;new String::hasNext
conds[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!exists
conds[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = createNewFile::!exists
conds[https://github.com/dana-i2cat/opennaas-routing-nfv ** bundles/net.i2cat.mantychore.actionsets.junos/src/main/java/net/i2cat/mantychore/actionsets/junos/actions/TempFileManager.java ** TempFileManager ** createFile] = createNewFile::!noExists;;;delete::!noExists
conds[https://github.com/dana-i2cat/opennaas-routing-nfv ** extensions/bundles/router.actionsets.junos/src/main/java/org/opennaas/extensions/router/junos/actionssets/actions/TempFileManager.java ** TempFileManager ** createFile] = createNewFile::!noExists;;;delete::!noExists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/builders/WsdlWithPublicServiceGenerator.java ** WsdlWithPublicServiceGenerator ** writeNewwsdl] = log::created
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/external/wsdl/parser/WSDLConversionToSingleNamespace.java ** WSDLConversionToSingleNamespace ** writeNewwsdl] = log::created
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/errorlibrary/FileErrorIdGenerator.java ** FileErrorIdGenerator ** tryGetFileLock] = getMessage::!(exists);;;new ErrorIdGeneratorException::exists***!(exists) && !createNewFile***!(exists)***!copyFile***!delete***!renameTo***fileLock == null;;;log::exists***!(exists) && !createNewFile***!(exists)***!copyFile***!delete***!renameTo
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/library/utils/TypeLibraryUtilities.java ** TypeLibraryUtilities ** create] = createNewFile::!(isPath);;;mkdirs::isPath***!(isPath);;;getPath::!(isPath);;;new File::!(isPath)
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createInterfacePropsFile] = createNewFile::!exists;;;mkdir::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createPropertyFile] = createNewFile::!exists;;;mkdirs::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQE2Test.java ** BetterToolingQE2Test ** createConsumerPropsFile] = createNewFile::!exists;;;mkdirs::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQETest.java ** BetterToolingQETest ** createConsumerPropsFile] = mkdirs::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQE2Test.java ** ConsumerIDQE2Test ** CreateInterfacePropsFile] = createNewFile::!exists;;;mkdir::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQETest.java ** ConsumerIDQETest ** createConsumerPropsFile] = createNewFile::!exists;;;mkdir::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderTest.java ** ObjectFactorySortOrderTest ** initialize] = createNewFile::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderV3Test.java ** ObjectFactorySortOrderV3Test ** initialize] = createNewFile::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceGeneratorTest8.java ** ServiceGeneratorTest8 ** updateServiceImplProjectProperties] = remove::remove;;;createNewFile::!File;;;mkdir::!exists;;;setProperty::!(remove);;;new File::!File
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** CreateInterfacePropsFile] = createNewFile::!exists;;;mkdir::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** createImplPropsFile] = new FileInputStream::!exists;;;new Properties::!exists;;;store::!exists;;;createNewFile::!exists;;;getAbsolutePath::!exists;;;load::!exists;;;mkdir::!exists;;;setProperty::!exists;;;close::!exists***!exists;;;new FileOutputStream::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE3Test.java ** ServiceUIDQE3Test ** CreateConsumerPropsFile] = createNewFile::!exists;;;mkdir::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateConsumerPropsFile] = createNewFile::!exists;;;mkdirs::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateInterfacePropsFile] = createNewFile::!exists;;;mkdirs::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/errorlibrary/ErrorLibraryFileGenerationTest.java ** ErrorLibraryFileGenerationTest ** createDomainPropertiesFile] = assertTrue::!exists;;;createNewFile::!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/BugTest.java ** BugTest ** testBug] = assertTrue::isDirectory;;;listFiles::isDirectory***isDirectory***isDirectory;;;createNewFile::!exists***!exists
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder1] = createNewFile::!exists***!exists;;;write::lenread > 0
conds[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder] = createNewFile::!exists***!exists;;;write::lenread > 0
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/core/internal/project/facet/JSFUtils.java ** JSFUtils ** createConfigFile] = log::os != null;;;close::os != null
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/designtime/internal/view/model/jsp/persistence/TagRepository.java ** TagRepository ** getOrCreateMasterIndex] = new SerializableVersion::!exists***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE);;;new IOException::!exists && !createNewFile;;;createNewRepo::!exists;;;load::!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE);;;toString::GLOBAL_MASTER_INDEX != null && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!exists && !createNewFile***!exists && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE) && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE;;;create::!exists;;;log::GLOBAL_MASTER_INDEX != null && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!exists && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE***!(JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE) && JSFCoreTraceOptions.TRACE_JSPTAGPERSISTENCE
conds[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.pagedesigner/src/org/eclipse/jst/pagedesigner/utils/PreviewUtil.java ** PreviewUtil ** toFile] = getEncoding::charset == null || !isSupported;;;createNewFile::!exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/pad/fragment/ChatRoomFragment.java ** ChatRoomFragment ** initValues] = getManagerServiceName::getNotificationService != null;;;createConversation::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getAssocActivity::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500 && equals***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && !(equals)***userModel != null***chatGroupModel != null;;;show::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500 && equals***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && !(equals);;;new StringBuilder::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;setText::equals && !(module != null) && models != null && size > 0 && getMycreate***equals && !(module != null) && models != null && size > 0 && !(getMycreate)***!(getMycreate) && userModel != null && isFavor***!(getMycreate) && userModel != null && !(isFavor)***chatGroupModel != null***userModel != null;;;sendMessage::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;new Thread::getAction == MotionEvent.ACTION_DOWN;;;getUserModel::!(getMycreate);;;currentTimeMillis::getAction == MotionEvent.ACTION_DOWN;;;reset::getAction == MotionEvent.ACTION_UP && mr != null;;;new AsyncTask<Void, Void, Void>::chatGroupModel != null && !roomIsNoExit;;;instance::equals***equals && !(module != null)***!(getMycreate);;;getConversations::equals && chatGroupModel != null***!(getMycreate) && userModel != null;;;setNeedProgressDialog::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getGroupName::chatGroupModel != null***getAction == MotionEvent.ACTION_DOWN && chatGroupModel != null;;;append::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;new HttpRequestAsynTask::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;execute::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***chatGroupModel != null && !roomIsNoExit;;;getJid::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500 && userModel != null;;;get::equals && !(module != null) && models != null && size > 0;;;setShowProgressDialog::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;mkdirs::!exists;;;notifyDataSetChanged::chatGroupModel != null && !roomIsNoExit;;;makeText::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500 && equals***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && !(equals);;;getInstance::equals && chatGroupModel != null***!(getMycreate) && userModel != null;;;sleep::getAction == MotionEvent.ACTION_UP;;;getChatManager::getNotificationService != null;;;start::getAction == MotionEvent.ACTION_DOWN;;;createNewFile::!exists;;;getSessionContainer::equals && !(module != null);;;getSessionKey::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;toString::equals && !(module != null)***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getStuff::equals***equals && !(module != null);;;getChatRoomContainer::equals;;;getString::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getUnreadMessageCount::equals && chatGroupModel != null && module != null***!(getMycreate) && userModel != null && module != null;;;release::getAction == MotionEvent.ACTION_UP && mr != null;;;printStackTrace::getAction == MotionEvent.ACTION_UP***getAction == MotionEvent.ACTION_UP && mr != null***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***!exists;;;getUserName::getNotificationService != null;;;getStringExtra::equals***!(getMycreate);;;stop::getAction == MotionEvent.ACTION_UP && mr != null;;;setGroupCode::equals && !(module != null);;;getCubeModuleByIdentifier::equals && chatGroupModel != null***!(getMycreate) && userModel != null;;;set::getAction == MotionEvent.ACTION_DOWN***getAction == MotionEvent.ACTION_UP;;;setSelection::chatGroupModel != null && !roomIsNoExit;;;new ChatGroupModel::equals && !(module != null);;;sendEmptyMessage::getAction == MotionEvent.ACTION_DOWN***getAction == MotionEvent.ACTION_UP;;;getRoomJid::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500 && chatGroupModel != null;;;delete::getAction == MotionEvent.ACTION_UP && !(equals) && exists;;;getPath::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500***getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getAppKey::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;saveChatJid::equals***!(getMycreate);;;new JSONObject::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getNotificationService::getNotificationService != null;;;longimplement::getAction == MotionEvent.ACTION_DOWN && userModel != null***getAction == MotionEvent.ACTION_DOWN && chatGroupModel != null;;;i::equals && !(module != null);;;queryForEq::equals && !(module != null);;;setRoomJid::equals && !(module != null);;;setPicId::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;findLastHistory::equals && !(module != null);;;getName::userModel != null***getAction == MotionEvent.ACTION_DOWN && userModel != null;;;setVisibility::equals && chatGroupModel != null***equals && !(module != null)***equals && !(module != null)***equals && !(module != null)***!(getMycreate)***!(getMycreate)***getNotificationService != null && !getChatManager->getNotificationService->isOnline && !roomIsNoExit***getNotificationService != null && !getChatManager->getNotificationService->isOnline && !roomIsNoExit***getNotificationService != null && !getChatManager->getNotificationService->isOnline && !roomIsNoExit***notificationService != null && getChatManager->isOnline && !roomIsNoExit***notificationService != null && getChatManager->isOnline && !roomIsNoExit***notificationService != null && getChatManager->isOnline && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit***!(!roomIsNoExit) && !roomIsNoExit;;;new File::getAction == MotionEvent.ACTION_UP && currentTimeMillis - start > 1500;;;getRoomName::equals && !(module != null);;;decreaseMsgCountBy::equals && chatGroupModel != null && module != null***!(getMycreate) && userModel != null && module != null;;;findHistory::chatGroupModel != null && !roomIsNoExit;;;clearNewMessageCount::equals && chatGroupModel != null***!(getMycreate) && userModel != null;;;getCount::chatGroupModel != null && !roomIsNoExit;;;new ChatRoomAdapter::userModel != null***chatGroupModel != null;;;setGroupName::equals && !(module != null)
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/camera/CameraActivity.java ** CameraActivity ** save] = e::getExternalStorageState->equals;;;createNewFile::getExternalStorageState->equals && !exists;;;new StatFs::getExternalStorageState->equals;;;getExternalStorageDirectory::getExternalStorageState->equals;;;write::getExternalStorageState->equals;;;toString::getExternalStorageState->equals;;;new File::getExternalStorageState->equals;;;getBlockSize::getExternalStorageState->equals;;;getAvailableBlocks::getExternalStorageState->equals;;;close::getExternalStorageState->equals;;;new FileOutputStream::getExternalStorageState->equals
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onClick] = setImageBitmap::result != null***result != null;;;putExtra::result != null;;;mkdirs::!exists;;;gc::result != null;;;show::!canSend;;;makeText::!canSend;;;copyFile::params0 != null && params1 != null && exists && exists;;;finish::result != null;;;getIntent::result != null;;;setResult::result != null;;;createNewFile::!exists;;;new File::params0 != null && params1 != null***params0 != null && params1 != null;;;printStackTrace::!exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onCreate] = new AsyncTask<Void, Void, Bitmap>::!(result != null) && imagePath != null;;;setImageBitmap::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getStringExtra::showTitle;;;execute::flag && imagePath != null***!(result != null) && imagePath != null;;;e::flag && imagePath != null***!(result != null) && imagePath != null;;;readPictureDegree::!(result != null) && imagePath != null && result != null;;;setImageResource::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;getExternalStorageDirectory::flag && imagePath != null;;;mkdirs::flag && imagePath != null && !exists;;;setImageMatrix::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;makeText::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;show::flag && imagePath != null && !(result != null)***!(result != null) && imagePath != null && !(result != null);;;setText::showTitle;;;new AsyncTask<String, Void, Bitmap>::flag && imagePath != null;;;rotateImage::!(result != null) && imagePath != null && result != null;;;center::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getIntent::showTitle;;;createNewFile::flag && imagePath != null && !exists;;;minZoom::flag && imagePath != null && result != null***!(result != null) && imagePath != null && result != null;;;getimage::flag && imagePath != null***!(result != null) && imagePath != null;;;setVisibility::!(result != null)***!(result != null);;;new File::flag && imagePath != null***flag && imagePath != null;;;printStackTrace::flag && imagePath != null && !exists***flag && imagePath != null***!(result != null) && imagePath != null
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/image/CropImage.java ** CropImage ** saveOutput] = compress::saveUrl != null && outputStream != null;;;getIntent::saveUrl != null;;;finish::saveUrl != null;;;putExtra::saveUrl != null***saveUrl != null;;;e::saveUrl != null***!(outputStream != null);;;setResult::saveUrl != null***saveUrl != null;;;createNewFile::!exists;;;openOutputStream::saveUrl != null;;;mkdirs::!exists;;;closeSilently::saveUrl != null;;;getOrientationInDegree::saveUrl != null;;;printStackTrace::!exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/update/DownloadUpdateActivity.java ** DownloadTask ** doInBackground] = d::getStatusLine->getStatusCode == HttpStatus.SC_OK***getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getEntity::getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getContent::getStatusLine->getStatusCode == HttpStatus.SC_OK;;;getContentLength::getStatusLine->getStatusCode == HttpStatus.SC_OK;;;publishProgress::getStatusLine->getStatusCode == HttpStatus.SC_OK && countread != 1;;;new RuntimeException::getStatusLine->getStatusCode == HttpStatus.SC_OK && total != length***!(total != length);;;close::fos != null***is != null;;;new FileOutputStream::getStatusLine->getStatusCode == HttpStatus.SC_OK;;;flush::fos != null;;;createNewFile::getStatusLine->getStatusCode == HttpStatus.SC_OK && !exists;;;getStatusLine::!(total != length);;;write::getStatusLine->getStatusCode == HttpStatus.SC_OK && countread != 1;;;getStatusCode::!(total != length)
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/LogUtil.java ** LogUtil ** storeLog] = e::!exists && !mkdir***!exists && !createNewFile;;;printStackTrace::!exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/imageTool/CubeAsyncImage.java ** CubeAsyncImage ** doBufferImage] = e::!isSdCardExist || fileNamegetImageFileName == null;;;getParentFile::!getParentFile->exists;;;mkdirs::!getParentFile->exists;;;delete::exists
conds[https://github.com/fywb251/bsl_impc_android ** cube-android/src/org/apache/cordova/file/FileUtils.java ** FileUtils ** getFile] = new TypeMismatchException::!(!exists) && directory && isFile***!(!exists) && !(isFile) && isDirectory;;;optBoolean::options != null***options != null && create;;;new FileExistsException::create && exclusive && exists***create && !exists;;;createNewFile::create && !(directory);;;mkdir::create && directory;;;new FileNotFoundException::!(!exists) && !exists;;;new EncodingException::contains
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = flush::!(exists);;;createNewFile::!(exists);;;mkdirs::!(exists) && !exists;;;getParentFile::!(exists);;;write::!(exists);;;close::!(exists);;;new FileOutputStream::!(exists)
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = compress::!(exists);;;createNewFile::!(exists);;;mkdirs::!(exists) && !exists;;;getParentFile::!(exists);;;delete::!(exists)***!(exists);;;printStackTrace::!(exists)***!(exists);;;close::!(exists);;;new FileOutputStream::!(exists)
conds[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!exists;;;createNewFile::!exists;;;mkdirs::!exists && !exists;;;getParentFile::!exists;;;write::!exists;;;printStackTrace::!exists***!exists;;;close::!exists;;;new FileOutputStream::!exists
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = flush::!(exists);;;createNewFile::!(exists);;;mkdirs::!(exists) && !exists;;;getParentFile::!(exists);;;write::!(exists);;;close::!(exists);;;new FileOutputStream::!(exists)
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = compress::!(exists);;;createNewFile::!(exists);;;mkdirs::!(exists) && !exists;;;getParentFile::!(exists);;;delete::!(exists)***!(exists);;;printStackTrace::!(exists)***!(exists);;;close::!(exists);;;new FileOutputStream::!(exists)
conds[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!exists;;;createNewFile::!exists;;;mkdirs::!exists && !exists;;;getParentFile::!exists;;;write::!exists;;;printStackTrace::!exists***!exists;;;close::!exists;;;new FileOutputStream::!exists
conds[https://github.com/hyxf/coder ** source/src/cn/hyxf/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = getBytes::!exists;;;createNewFile::!exists;;;mkdirs::!exists && !exists;;;getParentFile::!exists;;;write::!exists;;;printStackTrace::!exists***!exists;;;close::!exists;;;new FileOutputStream::!exists
conds[https://github.com/raymondBourges/esup-commons-import ** esup-commons/esup-commons-core/src/main/java/org/esupportail/commons/utils/lock/FileLockImpl.java ** FileLockImpl ** lock] = new AlreadyLockedException::!createNewFile
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/io/flv/impl/FLVWriter.java ** FLVWriter ** <init>] = warn::append && !exists!canRead!canWrite;;;new RandomAccessFile::append***!(duration == 0)***!(duration == 0);;;lastModified::append && !(!exists!canRead!canWrite);;;createNewFile::!(duration == 0) && exists;;;trace::append && !(!exists!canRead!canWrite);;;delete::!(duration == 0) && exists;;;length::append && !(!exists!canRead!canWrite)***append && !(!exists!canRead!canWrite);;;new File::!(duration == 0);;;debug::append;;;getDuration::append;;;seek::append && duration == 0
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/net/proxy/DebugProxyHandler.java ** DebugProxyHandler ** sessionCreated] = new ProtocolCodecFilter::isDebugEnabled;;;put::true;;;connect::!isClient;;;new NioSocketConnector::!isClient;;;debug::isDebugEnabled***!isClient***!isClient && isConnected && isDebugEnabled;;;getFilterChain::isDebugEnabled***true;;;getPort::true;;;write::true;;;currentTimeMillis::true;;;getResource::true***true;;;getSession::!isClient && isConnected;;;new NetworkDumpFilter::true;;;flip::true;;;getFile::true***true;;;getChannel::true***true;;;allocate::true;;;setAttribute::isDebugEnabled***!isClient && isConnected***!isClient && isConnected;;;setHandler::!isClient;;;new FileOutputStream::true***true;;;new RTMP::isDebugEnabled;;;addFirst::isDebugEnabled***true;;;getHostName::true;;;createNewFile::true***true;;;awaitUninterruptibly::!isClient;;;buf::true
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ClientBroadcastStream.java ** ClientBroadcastStream ** saveAs] = warn::exists && !(delete);;;getCanonicalPath::!(delete);;;put::recordPipe == null***isAppend***!(isAppend);;;setFile::getContext->hasBean;;;getAudioCodec::codecInfo;;;new AudioData::codecInfo && audioCodec != null && config != null;;;asReadOnlyBuffer::codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;new FileConsumer::!(getContext->hasBean);;;getBean::getContext->hasBean;;;setScope::getContext->hasBean;;;debug::exists && delete***!(delete)***getContext->hasBean***!(getContext->hasBean)***codecInfo***codecInfo && videoCodec != null && config != null***codecInfo && videoCodec != null && config != null***codecInfo && !(config != null)***codecInfo***codecInfo && audioCodec != null && config != null***codecInfo && audioCodec != null && config != null***codecInfo && !(config != null);;;getContext::!(resolvesToAbsolutePath)***getContext->hasBean;;;clear::recordPipe == null;;;deleteOnExit::exists && !(delete);;;subscribe::recordPipe == null;;;substring::!exists && slashPos != 1;;;getResource::!(resolvesToAbsolutePath);;;getFile::!(resolvesToAbsolutePath);;;getVideoCodec::codecInfo;;;trace::exists;;;mkdirs::!exists && !isDirectory;;;lastIndexOf::!exists;;;format::!isAppend && exists && !delete;;;new VideoData::codecInfo && videoCodec != null && config != null;;;getDecoderConfiguration::codecInfo && videoCodec != null***codecInfo && audioCodec != null;;;new IOException::conn == null***!isAppend && exists && !delete;;;setVideoDecoderConfiguration::codecInfo && videoCodec != null && config != null;;;createNewFile::!exists;;;getName::!isAppend && exists && !delete***exists && delete***exists && !(delete)***codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;getAbsolutePath::!exists;;;new File::resolvesToAbsolutePath***!exists;;;setAudioDecoderConfiguration::codecInfo && audioCodec != null && config != null;;;release::codecInfo && videoCodec != null && config != null***codecInfo && audioCodec != null && config != null;;;new InMemoryPushPushPipe::recordPipe == null
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ServerStream.java ** ServerStream ** saveAs] = getFile::!(resolvesToAbsolutePath);;;warn::!exists && !canWrite***!(!canWrite) && !(delete);;;getCanonicalPath::!exists && !canWrite;;;put::isAppend***!(isAppend);;;setFile::getContext->hasBean;;;mkdirs::!exists && !isDirectory;;;new FileConsumer::!(getContext->hasBean);;;setScope::getContext->hasBean;;;getBean::getContext->hasBean;;;lastIndexOf::!exists;;;debug::!(!canWrite) && delete;;;getContext::!(resolvesToAbsolutePath)***getContext->hasBean;;;deleteOnExit::!(!canWrite) && !(delete);;;new IOException::!isAppend && exists && !delete;;;createNewFile::!exists;;;getName::!(!canWrite) && delete***!(!canWrite) && !(delete);;;substring::!exists && slashPos != 1;;;getAbsolutePath::!exists***!(!canWrite);;;getResource::!(resolvesToAbsolutePath);;;new File::resolvesToAbsolutePath***!exists***!(!canWrite);;;new InMemoryPushPushPipe::null == recordPipe
conds[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/consumer/FileConsumer.java ** FileConsumer ** init] = new IllegalStateException::!(audioConfigurationTag != null) && !(equals);;;getAppendWriter::!(audioConfigurationTag != null) && equals;;;new ArrayList<QueuedData>::delayWrite;;;readLock::delayWrite;;;new IOException::!exists && !mkdirs***!(!isFile) && !canWrite;;;new ReentrantReadWriteLock::delayWrite;;;createNewFile::!isFile;;;getWriter::mode == null || equals;;;writeTag::mode == null || equals && videoConfigurationTag != null***mode == null || equals && audioConfigurationTag != null;;;writeLock::delayWrite
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = println::!(exists);;;getAbsolutePath::!(exists);;;delete::exists***!(exists) && exists;;;new File::!(exists)
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = println::!(exists);;;getAbsolutePath::!(exists);;;delete::exists***!(exists) && exists;;;new File::!(exists)
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = delete::exists
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = delete::exists
conds[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/stream/NoSyncServerStream.java ** NoSyncServerStream ** saveAs] = warn::!exists && !getFile->canWrite;;;getFile::!exists***!exists && !getFile->canWrite***!exists;;;getCanonicalPath::!exists && !getFile->canWrite;;;put::isAppend***!(isAppend);;;error::!exists;;;new IOException::!isAppend && exists && !getFile->delete;;;createNewFile::!exists;;;mkdirs::!exists && !isDirectory;;;substring::!exists && slashPos != 1;;;getAbsolutePath::!exists;;;getResource::!exists;;;lastIndexOf::!exists;;;new File::!exists;;;new InMemoryPushPushPipe::null == recordPipe
conds[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** findFileForConfig] = findFileForConfig::exists;;;createNewFile::!(exists);;;name::exists;;;next::hasNext;;;debug::exists***!(exists);;;printStackTrace::!(exists)
conds[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** write] = createNewFile::!exists;;;name::!exists;;;write::values***values;;;getAbsolutePath::!exists;;;label::values;;;debug::!exists;;;as_string::values;;;close::out != null
conds[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/FinalDb.java ** FinalDb ** createDbFileOnSDCard] = new DbException::!exists;;;openOrCreateDatabase::!exists && createNewFile***!(createNewFile)
conds[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/http/entityhandler/FileEntityHandler.java ** FileEntityHandler ** handleEntity] = new IOException::mStop && current < count;;;createNewFile::!exists;;;write::!mStop!current >= countreadLenread > 0;;;length::isResume;;;callBack::!mStop!current >= countreadLenread > 0;;;new FileOutputStream::isResume***!(isResume)
