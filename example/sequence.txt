seqs[https://github.com/Ourobor/petulant-batman ** javaproject/src/Study/FileStudy.java ** FileStudy ** saveState] = ->TRY {->getMyPath->new File->IF {->createNewFile}->new FileOutputStream->getValNames->iterator->LOOP {->next->get->new String->write}->close->merge}->CATCH {->println}
seqs[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = ->TRY {->new File->IF {->createNewFile}->new FileOutputStream->new String->images->stateToString->new String->write->write->close}->CATCH {->println}
seqs[https://github.com/Ourobor/petulant-batman ** javaproject/src/deprecated/FileStudy.java ** FileStudy ** saveState] = ->TRY {->new File->IF {->createNewFile}->new FileOutputStream->new String->images->stateToString->new String->write->write->close}->CATCH {->println}
seqs[https://github.com/Ourobor/petulant-batman ** src/Study/FileStudy.java ** FileStudy ** saveState] = ->TRY {->getMyPath->new File->IF {->createNewFile}->new FileOutputStream->getValNames->iterator->LOOP {->next->get->new String->write}->close->merge}->CATCH {->println}
seqs[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = ->TRY {->new File->IF {->createNewFile}->new FileOutputStream->new String->images->stateToString->new String->write->write->close}->CATCH {->println}
seqs[https://github.com/Ourobor/petulant-batman ** src/deprecated/FileStudy.java ** FileStudy ** saveState] = ->TRY {->new File->IF {->createNewFile}->new FileOutputStream->new String->images->stateToString->new String->write->write->close}->CATCH {->println}
seqs[https://github.com/craig-a-roach/geowx ** ebx/src/test/java/com/metservice/argon/cache/disk/TestUnit1Mru.java ** TestUnit1Mru ** t20_space] = ->new SpaceId->TRY {->new Probe->newConfig->enableSafeNaming->populationLimit->enableClean->sizeLimitBytes->auditCycle->checkpointHoldoff->checkpointPeriod->impliedFresh->minLife->newInstance->new Supplier->put->put->put->putHole->put->TRY {->new File}->CATCH {->getMessage->fail}->fixNow->new Request->find->assertNotNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->statsReport->assertEquals->new Request->find->assertNotNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->statsReport->assertEquals->new Request->find->assertNotNull->reachedPurgeAgenda->assertTrue->allowPurgeReclaim->reachedPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->exists->assertFalse->statsReport->assertEquals->new Request->find->assertNotNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->exists->assertTrue->statsReport->assertEquals->new Request->find->assertNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->noCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->new Request->find->assertNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->new Request->find->assertNotNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->reachedAudit->assertTrue->statsReport->assertEquals->new Request->find->assertNull->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->cancel->get->assertEquals->get->assertEquals->get->assertEquals->get->assertEquals->get->assertEquals->getSensorId->findSensor->assertNotNull->assertTrue->isNaN->assertTrue->println}->CATCH {->getMessage->fail}->CATCH {->getMessage->fail}->CATCH {->getMessage->fail}->CATCH {->fail}->TRY {->new Probe->newConfig->enableSafeNaming->populationLimit->enableClean->sizeLimitBytes->auditCycle->checkpointHoldoff->checkpointPeriod->minLife->newInstance->new Supplier->fixNow->newFixedThreadPool->setConcurrentMode->new Request->new Agent->submit->new Request->new Agent->submit->new Request->new Agent->submit->TRY {->get->assertNotNull->length->assertEquals}->CATCH {->getMessage->fail}->TRY {->get->assertNotNull->length->assertEquals}->CATCH {->getMessage->fail}->TRY {->get->assertNull}->CATCH {->getMessage->fail}->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->put->put->put->fixNow->setConcurrentMode->allowPurgeReclaim->new Request->new Agent->submit->new Request->new Agent->submit->TRY {->get->assertNotNull->length->assertEquals}->CATCH {->getMessage->fail}->TRY {->get->assertNotNull}->CATCH {->getMessage->fail}->reachedPurgeAgenda->assertTrue->reachedPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->noPurgeAgenda->assertTrue->new Request->new Agent->submit->TRY {->get->assertNotNull}->CATCH {->getMessage->fail}->statsReport->assertEquals->reachedPurgeAgenda->assertTrue->new Request->new Agent->submit->TRY {->get->assertNotNull}->CATCH {->getMessage->fail}->allowPurgeReclaim->reachedPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->put->fixNow->new Request->new Agent->submit->new Request->new Agent->submit->new Request->new Agent->submit->TRY {->get->get->get->assertNotNull->assertNotNull->assertNotNull}->CATCH {->getMessage->fail}->noPurgeAgenda->assertTrue->noPurgeReclaim->assertTrue->reachedCheckpoint->assertTrue->noAudit->assertTrue->statsReport->assertEquals->cancel->get->assertEquals->get->assertEquals->get->assertEquals->get->equals->get->equals->assertTrue->get->assertEquals->get->assertEquals}->CATCH {->getMessage->fail}->CATCH {->getMessage->fail}->CATCH {->fail}
seqs[https://github.com/dana-i2cat/opennaas-routing-nfv ** bundles/net.i2cat.mantychore.actionsets.junos/src/main/java/net/i2cat/mantychore/actionsets/junos/actions/TempFileManager.java ** TempFileManager ** createFile] = ->TRY {->new File->createNewFile->IF {->delete->createNewFile}->new FileWriter->length->new BufferedWriter->write->close->getAbsolutePath}->CATCH {->new FileNotFoundException}
seqs[https://github.com/dana-i2cat/opennaas-routing-nfv ** extensions/bundles/router.actionsets.junos/src/main/java/org/opennaas/extensions/router/junos/actionssets/actions/TempFileManager.java ** TempFileManager ** createFile] = ->TRY {->new File->createNewFile->IF {->delete->createNewFile}->new FileWriter->length->new BufferedWriter->write->close->getAbsolutePath}->CATCH {->new FileNotFoundException}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/builders/WsdlWithPublicServiceGenerator.java ** WsdlWithPublicServiceGenerator ** writeNewwsdl] = ->newInstance->TRY {->newTransformer->setOutputProperty}->CATCH {->log->new CodeGenFailedException}->new DOMSource->TRY {->new File->TRY {->createNewFile->IF {->log}}->CATCH {->log->getMessage->new CodeGenFailedException}->new FileOutputStream->new StreamResult->setNode->transform}->CATCH {->getMessage->new CodeGenFailedException}->CATCH {->getMessage->new CodeGenFailedException}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/codegen/external/wsdl/parser/WSDLConversionToSingleNamespace.java ** WSDLConversionToSingleNamespace ** writeNewwsdl] = ->log->newInstance->TRY {->newTransformer->setOutputProperty}->CATCH {->getMessageAndLocation->log->getMessage->new CodeGenFailedException}->new DOMSource->TRY {->new File->TRY {->log->createNewFile->IF {->log}}->CATCH {->getMessage->log->getMessage->new CodeGenFailedException}->new FileOutputStream->new StreamResult->setNode->transform}->CATCH {->getMessage->log->getMessage->new CodeGenFailedException}->CATCH {->getMessage->log->getMessage->new CodeGenFailedException}->FINALLY {->flushAndCloseQuietly}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/errorlibrary/FileErrorIdGenerator.java ** FileErrorIdGenerator ** tryGetFileLock] = ->new File->getLockFilesPath->new File->IF {->log->new ErrorIdGeneratorException}->ELSE {->TRY {->IF {->log->new ErrorIdGeneratorException}}->CATCH {->getMessage->log->new ErrorIdGeneratorException}}->TRY {->new File->IF {->log->new ErrorIdGeneratorException}->IF {->log->new ErrorIdGeneratorException}->new File->IF {->log->new ErrorIdGeneratorException}->new FileOutputStream->getChannel->tryLock->IF {->new ErrorIdGeneratorException}}->CATCH {->getMessage->new ErrorIdGeneratorException}->CATCH {->getMessage->new ErrorIdGeneratorException}->FINALLY {->closeQuietly}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/main/java/org/ebayopensource/turmeric/tools/library/utils/TypeLibraryUtilities.java ** TypeLibraryUtilities ** create] = ->IF {->mkdirs}->ELSE {->TRY {->getPath->new File->createNewFile}->CATCH {}}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createInterfacePropsFile] = ->new File->new File->TRY {->IF {->mkdir}->IF {->createNewFile}->new FileOutputStream->store}->CATCH {}->FINALLY {->close}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/AbstractServiceGeneratorTestCase.java ** AbstractServiceGeneratorTestCase ** createPropertyFile] = ->new File->IF {->mkdirs}->new File->IF {->createNewFile}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQE2Test.java ** BetterToolingQE2Test ** createConsumerPropsFile] = ->getAbsolutePath->new File->IF {->mkdirs}->getAbsolutePath->new File->IF {->createNewFile}->new Properties->new FileInputStream->load->setProperty->setProperty->setProperty->setProperty->getAbsolutePath->new FileOutputStream->store->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/BetterToolingQETest.java ** BetterToolingQETest ** createConsumerPropsFile] = ->getTestDestDir->getAbsolutePath->new File->IF {->mkdirs}->getAbsolutePath->new File->createNewFile->new Properties->new FileInputStream->load->setProperty->setProperty->setProperty->setProperty->getAbsolutePath->new FileOutputStream->store->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQE2Test.java ** ConsumerIDQE2Test ** CreateInterfacePropsFile] = ->getAbsolutePath->new File->IF {->mkdir}->new File->IF {->createNewFile}->new Properties->new FileInputStream->load->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->getAbsolutePath->new FileOutputStream->store->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ConsumerIDQETest.java ** ConsumerIDQETest ** createConsumerPropsFile] = ->new File->new File->TRY {->IF {->mkdir}->IF {->createNewFile}->new FileOutputStream->store}->CATCH {}->FINALLY {->close}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderTest.java ** ObjectFactorySortOrderTest ** initialize] = ->ensureEmpty->getDir->getFile->getAbsolutePath->new File->IF {->createNewFile}->TRY {->getAbsolutePath->createPropertyFile}->CATCH {}->new Properties->put->put->put->put->put->put->put->put->fillProperties
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ObjectFactorySortOrderV3Test.java ** ObjectFactorySortOrderV3Test ** initialize] = ->ensureEmpty->getDir->getFile->getAbsolutePath->new File->IF {->createNewFile}->TRY {->getAbsolutePath->createPropertyFile}->CATCH {->printStackTrace}->new Properties->put->put->put->put->put->put->put->put->fillProperties
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceGeneratorTest8.java ** ServiceGeneratorTest8 ** updateServiceImplProjectProperties] = ->getTestDestDir->IF {->mkdir}->getAbsolutePath->IF {->new File}->new FileInputStream->new Properties->load->close->IF {->remove}->ELSE {->setProperty}->new FileOutputStream->store->flush->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** CreateInterfacePropsFile] = ->new File->new File->TRY {->IF {->mkdir}->IF {->createNewFile}->new FileOutputStream->store}->CATCH {}->FINALLY {->close}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE2Test.java ** ServiceUIDQE2Test ** createImplPropsFile] = ->getAbsolutePath->new File->IF {->mkdir}->IF {->TRY {->createNewFile->new Properties->new FileInputStream->load->setProperty->getAbsolutePath->new FileOutputStream->store}->CATCH {}->FINALLY {->close->close}}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQE3Test.java ** ServiceUIDQE3Test ** CreateConsumerPropsFile] = ->getAbsolutePath->new File->getAbsolutePath->new File->IF {->mkdir}->IF {->createNewFile}->new Properties->new FileInputStream->load->setProperty->setProperty->getAbsolutePath->new FileOutputStream->store->close->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateConsumerPropsFile] = ->new File->new File->IF {->mkdirs}->IF {->createNewFile}->new Properties->new FileInputStream->load->setProperty->setProperty->new FileOutputStream->store->close->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/codegen/ServiceUIDQETest.java ** ServiceUIDQETest ** CreateInterfacePropsFile] = ->new File->new File->IF {->mkdirs}->IF {->createNewFile}->new Properties->new FileInputStream->load->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->get->setProperty->new FileOutputStream->store->close->close
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/errorlibrary/ErrorLibraryDataInputTest.java ** ErrorLibraryDataInputTest ** createDomainPropertiesFile] = ->separatorsToSystem->new File->ensureDirExists->new File->createNewFile->assertTrue->copyErrorPropertiesToProjectRoot->copyErrorXmlToProjectRoot
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/errorlibrary/ErrorLibraryFileGenerationTest.java ** ErrorLibraryFileGenerationTest ** createDomainPropertiesFile] = ->getFile->ensureDirExists->new File->IF {->createNewFile->assertTrue}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/errorlibrary/ErrorLibraryFileGenerationTest.java ** ErrorLibraryFileGenerationTest ** createTestSpecificPropFile] = ->getFile->createNewFile->assertTrue
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/BugTest.java ** BugTest ** testBug] = ->getAbsolutePath->createPropertyFile->fillProperties->getAbsolutePath->createTypeLibrary->getAbsolutePath->setClassPath->copyResource->copyResource->getAbsolutePath->createType->copyResource->getAbsolutePath->createType->getAbsolutePath->createTypeLibrary->getAbsolutePath->setClassPath->copyResource->copyResource->getAbsolutePath->createType->copyResource->getAbsolutePath->createType->copyResource->getAbsolutePath->new File->createFolders->getAbsolutePath->new File->IF {->createNewFile}->new File->IF {->createNewFile}->copyFile->copyFile->getAbsolutePath->compileJavaFile->getAbsolutePath->compileJavaFile->fillProperties->getCodegenQEDataFileInput->getAbsolutePath->getAbsolutePath->getAbsolutePath->getAbsolutePath->getAbsolutePath->performDirectCodeGen->new FileFilter->new FileFilter->new File->IF {->listFiles->listFiles->listFiles->assertTrue}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder1] = ->new File->IF {->TRY {->createNewFile}->CATCH {}}->new File->IF {->TRY {->createNewFile}->CATCH {}}->TRY {->new FileInputStream->new FileOutputStream->LOOP {->write}->close->close}->CATCH {}->CATCH {}->FINALLY {->gc}
seqs[https://github.com/ebayopensource/turmeric-runtime ** codegen/codegen-tools/src/test/java/org/ebayopensource/turmeric/tools/library/TypeLibraryUtility.java ** TypeLibraryUtility ** copyXSDFileToTypesFolder] = ->getTestDestDir->getAbsolutePath->new File->mkdirs->toString->new File->IF {->TRY {->createNewFile}->CATCH {}}->new File->getAbsolutePath->IF {->TRY {->createNewFile}->CATCH {}}->TRY {->new FileInputStream->new FileOutputStream->LOOP {->write}->close->close}->CATCH {}->CATCH {}->FINALLY {->gc}
seqs[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/core/internal/project/facet/JSFUtils.java ** JSFUtils ** createConfigFile] = ->TRY {->removeLastSegments->toFile->mkdirs->toFile->createNewFile->new FileOutputStream->printConfigFile}->CATCH {->log}->CATCH {->log}->FINALLY {->IF {->TRY {->close}->CATCH {->log}}}
seqs[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.jsf.core/src/org/eclipse/jst/jsf/designtime/internal/view/model/jsp/persistence/TagRepository.java ** TagRepository ** getOrCreateMasterIndex] = ->getDefault->getStateLocation->append->toOSString->new File->IF {->IF {->toString->log}}->IF {->createNewRepo}->getAbsolutePath->toOSString->new Path->new File->getAbsolutePath->new MasterIndex->IF {->IF {->toString->new IOException}->IF {->toString->log}->new SerializableVersion->create}->ELSE {->IF {->toString->log}->new SerializableVersion->load}
seqs[https://github.com/eclipse/webtools.jsf ** jsf/plugins/org.eclipse.jst.pagedesigner/src/org/eclipse/jst/pagedesigner/utils/PreviewUtil.java ** PreviewUtil ** toFile] = ->TRY {->createTempFile->IF {->createNewFile}->getContentTypeManager->getContentType->toString->new StringReader->getDescriptionFor->getCharset->IF {->getEncoding->IF {}}->new FileOutputStream->new PrintStream->toString->print->close->close}->CATCH {->info}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/pad/fragment/ChatRoomFragment.java ** ChatRoomFragment ** initValues] = ->IF {}->IF {}->findViewById->new ChatroomLayout.TouchCallback->setTouchCallback->saveChatJid->getAssocActivity->getIntent->getStringExtra->findViewById->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setText->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setVisibility->setOnClickListener->findViewById->findViewById->findViewById->IF {->getStringExtra->saveChatJid->instance->getChatRoomContainer->getStuff->IF {->setVisibility->getInstance->getCubeModuleByIdentifier->IF {->getUnreadMessageCount->decreaseMsgCountBy}->clearNewMessageCount->getConversations}->ELSE {->setVisibility->new ChatGroupModel->instance->getSessionContainer->getStuff->getRoomName->setGroupName->setGroupCode->setRoomJid->findLastHistory->toString->i->setVisibility->setVisibility->queryForEq->IF {->get->IF {->setText}->ELSE {->setText}}}}->ELSE {->setVisibility->setVisibility->getStringExtra->saveChatJid->instance->getUserModel->IF {->IF {->setText}->ELSE {->setText}->getInstance->getCubeModuleByIdentifier->IF {->getUnreadMessageCount->decreaseMsgCountBy}->clearNewMessageCount->getConversations}}->findViewById->setOnClickListener->IF {->getUserName->getChatManager->getNotificationService->getManagerServiceName}->getAssocActivity->setValue->findViewById->setOnClickListener->findViewById->IF {->getGroupName->setText}->IF {->getName->setText}->setEllipsize->setSingleLine->findViewById->setSelected->findViewById->setOnFocusChangeListener->new OnTouchListener->setOnTouchListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->new OnTouchListener->setOnTouchListener->IF {->getAssocActivity->new ChatRoomAdapter}->IF {->getAssocActivity->new ChatRoomAdapter}->setAdapter->size->setSelection->IF {->IF {->new AsyncTask<Void, Void, Void>}}->getAssocActivity->new ProgressDialog->setProgressStyle->setTitle->setCanceledOnTouchOutside->setCancelable->setMessage->createDialog->getAssocActivity->getApplication->getNotificationService->cast->IF {->IF {->setVisibility->setVisibility->setVisibility}}->ELSE {->IF {->setVisibility->setVisibility->setVisibility}}->findViewById->findViewById->findViewById->getAssocActivity->getInstance->ParseExpressionFileData->createExpressionPageView->new LocalModule->setModuleName->setLocalClass->getResources->getDrawable->setIcon->setSortNum->add->new LocalModule->setModuleName->setLocalClass->getResources->getDrawable->setIcon->setSortNum->add->new LocalModule->setModuleName->setLocalClass->getResources->getDrawable->setIcon->setSortNum->add->getExternalStorageDirectory->new File->IF {->mkdirs}->new File->IF {->TRY {->createNewFile}->CATCH {->printStackTrace}}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/camera/CameraActivity.java ** CameraActivity ** save] = ->getPath->TRY {->IF {->getExternalStorageDirectory->toString->new StatFs->getAvailableBlocks->getBlockSize->e->IF {}->new File->IF {->createNewFile}->new FileOutputStream->write->close}}->CATCH {->printStackTrace->getMessage->e}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onClick] = ->getId->setImageBitmap->gc->finish->IF {->makeText->show}->getExternalStorageDirectory->new File->IF {->mkdirs}->currentTimeMillis->new File->IF {->TRY {->createNewFile}->CATCH {->printStackTrace}}->new AsyncTask<String, Integer, String>->getAbsolutePath->setVisibility->setVisibility->new Intent->putExtra->putExtra->putExtra->putExtra->e->startActivityForResult
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/PicutureDetailActivity.java ** PicutureDetailActivity ** onCreate] = ->super.onCreate->setContentView->findViewById->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnClickListener->findViewById->setOnTouchListener->findViewById->findViewById->findViewById->findViewById->setVisibility->getIntent->getStringExtra->getIntent->getBooleanExtra->getIntent->getBooleanExtra->IF {->getIntent->getStringExtra->setText}->new DisplayMetrics->getWindowManager->getDefaultDisplay->getMetrics->IF {->IF {->e->getExternalStorageDirectory->new File->IF {->mkdirs}->new File->IF {->TRY {->createNewFile}->CATCH {->printStackTrace}}->new AsyncTask<String, Void, Bitmap>}}->ELSE {->setVisibility->setVisibility->IF {->e->new AsyncTask<Void, Void, Bitmap>}}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/phone/chat/image/CropImage.java ** CropImage ** saveOutput] = ->getExternalStorageDirectory->new File->IF {->mkdirs}->new File->IF {->TRY {->createNewFile}->CATCH {->printStackTrace}}->fromFile->IF {->TRY {->openOutputStream->IF {->compress}}->CATCH {->e->setResult->finish}->FINALLY {->closeSilently}->getIntent->putExtra->getOrientationInDegree->putExtra->setResult}->ELSE {->e}->recycle->finish
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/update/DownloadUpdateActivity.java ** DownloadTask ** doInBackground] = ->println->new BasicHttpParams->setConnectionTimeout->new DefaultHttpClient->getBundle->getUpdateAppplicationUrl->new HttpGet->getURI->println->setHeader->getAPKFile->TRY {->execute->IF {->getEntity->getContentLength->d->getContent->IF {->createNewFile}->new FileOutputStream->LOOP {->write->publishProgress}->d->IF {->new RuntimeException}}->ELSE {->getStatusLine->getStatusCode->new RuntimeException}}->CATCH {->e->new Exception}->FINALLY {->TRY {->IF {->flush->close}->IF {->close}}->CATCH {}}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/LogUtil.java ** LogUtil ** storeLog] = ->new File->IF {->IF {->e}}->new File->IF {->TRY {->IF {->e}}->CATCH {->printStackTrace}}->TRY {->new FileOutputStream->new PrintWriter->println->flush->close}->CATCH {->printStackTrace}->CATCH {->printStackTrace}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/com/foreveross/chameleon/util/imageTool/CubeAsyncImage.java ** CubeAsyncImage ** doBufferImage] = ->TRY {->IF {->e}->new File->new File->IF {->getParentFile->mkdirs}->IF {->delete}->createNewFile->new FileOutputStream->new BufferedOutputStream->compress->flush->close->e}->CATCH {->printStackTrace}->CATCH {->printStackTrace}->CATCH {->printStackTrace}
seqs[https://github.com/fywb251/bsl_impc_android ** cube-android/src/org/apache/cordova/file/FileUtils.java ** FileUtils ** getFile] = ->IF {->optBoolean->IF {->optBoolean}}->IF {->new EncodingException}->createFileObject->IF {->IF {->new FileExistsException}->IF {->mkdir}->ELSE {->createNewFile}->IF {->new FileExistsException}}->ELSE {->IF {->new FileNotFoundException}->IF {->IF {->new TypeMismatchException}}->ELSE {->IF {->new TypeMismatchException}}}->getEntry
seqs[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = ->new File->IF {}->ELSE {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->write->flush->close}
seqs[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = ->IF {}->new File->IF {}->ELSE {->TRY {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->compress->close}->CATCH {->delete->printStackTrace}->CATCH {->printStackTrace->delete}}
seqs[https://github.com/hyxf/coder ** eoecn/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = ->new File->IF {->TRY {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->getBytes->write->close}->CATCH {->printStackTrace}->CATCH {->printStackTrace}}
seqs[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = ->new File->IF {}->ELSE {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->write->flush->close}
seqs[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/ImageUtil.java ** ImageUtil ** saveImage] = ->IF {}->new File->IF {}->ELSE {->TRY {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->compress->close}->CATCH {->delete->printStackTrace}->CATCH {->printStackTrace->delete}}
seqs[https://github.com/hyxf/coder ** source/src/cn/eoe/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = ->new File->IF {->TRY {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->getBytes->write->close}->CATCH {->printStackTrace}->CATCH {->printStackTrace}}
seqs[https://github.com/hyxf/coder ** source/src/cn/hyxf/app/utils/RequestCacheUtil.java ** RequestCacheUtil ** saveFileForLocal] = ->new File->IF {->TRY {->getParentFile->IF {->mkdirs}->createNewFile->new FileOutputStream->getBytes->write->close}->CATCH {->printStackTrace}->CATCH {->printStackTrace}}
seqs[https://github.com/raymondBourges/esup-commons-import ** esup-commons/esup-commons-core/src/main/java/org/esupportail/commons/utils/lock/FileLockImpl.java ** FileLockImpl ** lock] = ->TRY {->new File->IF {->new AlreadyLockedException}}->CATCH {->new LockException}
seqs[https://github.com/rfkrocktk/red5-server ** src/org/red5/io/flv/impl/FLVWriter.java ** FLVWriter ** <init>] = ->getAbsolutePath->debug->TRY {->IF {->getDuration->debug->new RandomAccessFile->IF {->warn}->ELSE {->length->lastModified->trace->length}->IF {->seek}}->ELSE {->new File->IF {->delete->createNewFile}->new RandomAccessFile->new RandomAccessFile}}->CATCH {->error}
seqs[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/net/proxy/DebugProxyHandler.java ** DebugProxyHandler ** sessionCreated] = ->getRemoteAddress->equals->IF {->debug->new RTMP->setAttribute->new ProtocolCodecFilter->getFilterChain->addFirst}->new ProxyFilter->getFilterChain->addFirst->IF {->currentTimeMillis->getHostName->getPort->getResource->getFile->createNewFile->getResource->getFile->createNewFile->new FileOutputStream->getChannel->new FileOutputStream->getChannel->allocate->put->flip->buf->write->new NetworkDumpFilter->getFilterChain->addFirst}->IF {->debug->new NioSocketConnector->setHandler->connect->awaitUninterruptibly->IF {->IF {->debug}->getSession->setAttribute->setAttribute}}->super.sessionCreated
seqs[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ClientBroadcastStream.java ** ClientBroadcastStream ** saveAs] = ->debug->new HashMap<String, Object>->IF {->new InMemoryPushPushPipe->put->subscribe->clear}->getConnection->IF {->new IOException}->getScope->getScopeService->generateFilename->IF {->new File}->ELSE {->getContext->getResource->getFile}->exists->canWrite->debug->IF {->IF {->IF {->getName->format->new IOException}}}->ELSE {->IF {}->ELSE {}}->IF {->getAbsolutePath->lastIndexOf->IF {->substring}->new File->IF {->mkdirs}->createNewFile}->getCanonicalPath->new File->IF {->trace->IF {->getName->debug}->ELSE {->getName->warn->deleteOnExit}}->ELSE {->getCanonicalPath->debug}->getCanonicalPath->debug->IF {->debug->getContext->getBean->setScope->setFile}->ELSE {->debug->new FileConsumer}->getCodecInfo->debug->IF {->getVideoCodec->debug->IF {->getDecoderConfiguration->IF {->getName->debug->asReadOnlyBuffer->new VideoData->TRY {->debug->setVideoDecoderConfiguration}->FINALLY {->release}}}->ELSE {->debug}->getAudioCodec->debug->IF {->getDecoderConfiguration->IF {->getName->debug->asReadOnlyBuffer->new AudioData->TRY {->debug->setAudioDecoderConfiguration}->FINALLY {->release}}}->ELSE {->debug}}->IF {->put}->ELSE {->put}->subscribe
seqs[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/ServerStream.java ** ServerStream ** saveAs] = ->TRY {->getScope->getScopeService->generateFilename->IF {->new File}->ELSE {->getContext->getResource->getFile}->IF {->IF {->IF {->new IOException}}}->ELSE {->IF {}}->IF {->getAbsolutePath->lastIndexOf->IF {->substring}->new File->IF {->mkdirs}->IF {->getCanonicalPath->warn}->createNewFile}->ELSE {->getAbsolutePath->new File->IF {->getName->debug}->ELSE {->getName->warn->deleteOnExit}}->getCanonicalPath->debug->IF {->getContext->getBean->setScope->setFile}->ELSE {->new FileConsumer}->new HashMap<String, Object>->IF {->put}->ELSE {->put}->IF {->new InMemoryPushPushPipe}->subscribe}->CATCH {->warn}
seqs[https://github.com/rfkrocktk/red5-server ** src/org/red5/server/stream/consumer/FileConsumer.java ** FileConsumer ** init] = ->debug->IF {->new ArrayList<QueuedData>->new ReentrantReadWriteLock->writeLock->readLock}->getScopeService->getParentFile->IF {->IF {->new IOException}}->IF {->createNewFile}->ELSE {->IF {->new IOException}}->getService->getStreamableFile->IF {->getWriter->IF {->writeTag}->IF {->writeTag}}->ELSE {->IF {->getAppendWriter}->ELSE {->new IllegalStateException}}
seqs[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = ->new File->getAbsolutePath->println->IF {->delete}->ELSE {->new File->getAbsolutePath->println->IF {->delete}}->createNewFile->getStreamableFile->getWriter->new File->getStreamableFile->getInstance->setCache->getReader->writeTagsWithInjection
seqs[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = ->new File->getAbsolutePath->println->IF {->delete}->ELSE {->new File->getAbsolutePath->println->IF {->delete}}->createNewFile->getStreamableFile->getWriter->new File->getStreamableFile->getInstance->setCache->getReader->writeTagsWithInjection
seqs[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/CuePointInjectionTest.java ** CuePointInjectionTest ** testCuePointInjection] = ->new File->IF {->delete}->createNewFile->getStreamableFile->getWriter->new File->getStreamableFile->getReader->writeTagsWithInjection
seqs[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/io/test/MetaDataInjectionTest.java ** MetaDataInjectionTest ** testMetaDataInjection] = ->new File->IF {->delete}->createNewFile->getStreamableFile->getWriter->new File->getStreamableFile->getReader->writeTagsWithInjection
seqs[https://github.com/rfkrocktk/red5-server ** test/org/red5/server/stream/NoSyncServerStream.java ** NoSyncServerStream ** saveAs] = ->TRY {->getScope->getScopeService->generateFilename->getContext->getResource->IF {->IF {->IF {->new IOException}}}->ELSE {->IF {}}->IF {->TRY {->getFile->getAbsolutePath->lastIndexOf->IF {->substring}->new File->IF {->mkdirs}}->CATCH {->error}->getResource}->IF {->IF {->getFile->getCanonicalPath->warn}->getFile->createNewFile}->getFile->new FileConsumer->new HashMap<String, Object>->IF {->put}->ELSE {->put}->IF {->new InMemoryPushPushPipe}->subscribe}->CATCH {->warn}
seqs[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** findFileForConfig] = ->debug->IF {->next}->length->name->new File->debug->IF {->debug->name->findFileForConfig}->ELSE {->TRY {->debug->createNewFile}->CATCH {->printStackTrace}}->debug
seqs[https://github.com/twigkit/fig ** fig-core/src/main/java/twigkit/fig/loader/PropertiesLoader.java ** PropertiesLoader ** write] = ->TRY {->IF {->getAbsolutePath->name->debug->createNewFile}->debug->new FileOutputStream->new OutputStreamWriter->LOOP {->label->as_string->write->write}->path->put}->CATCH {->printStackTrace}->FINALLY {->TRY {->IF {->close}}->CATCH {->printStackTrace}}
seqs[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/FinalDb.java ** FinalDb ** createDbFileOnSDCard] = ->new File->IF {->TRY {->IF {->openOrCreateDatabase}}->CATCH {->new DbException}}->ELSE {->openOrCreateDatabase}
seqs[https://github.com/yangfuhai/afinal ** src/net/tsz/afinal/http/entityhandler/FileEntityHandler.java ** FileEntityHandler ** handleEntity] = ->IF {}->new File->IF {->createNewFile}->IF {}->IF {->length->new FileOutputStream}->ELSE {->new FileOutputStream}->IF {}->getContent->getContentLength->IF {}->LOOP {->write->callBack}->callBack->IF {->new IOException}